import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import Cookies from 'js-cookie'; // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å cookies
import './SideBar.css';
import { useUser } from '../../UserContext';

const CustomSidebar = ({ unreadCount }) => {
    const location = useLocation();
    const navigate = useNavigate();
    const { userId } = useUser(); // –ü–æ–ª—É—á–∞–µ–º userId –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const token = Cookies.get('jwt'); // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    const [unreadMessagesCount, setUnreadMessagesCount] = useState(0); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—É—Ç–∏
    const isActive = (page) => {
        if (page === 'chat') {
            return location.pathname.startsWith('/chat');
        }
        return location.pathname === `/${page}`;
    };

    const handleNavigate = (page) => {
        navigate(`/${page}`);
    };

    const handleLogOut = () => {
        // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ cookies
        Cookies.remove('jwt');
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        window.location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    };

    // useEffect(() => {
    //     if (userId && token) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ userId –∏ token —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    //         console.log("–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...");

    //         const fetchUnreadMessages = () => {
    //             fetch(`https://pandatur-api.com/messages/unseen/${userId}`, {
    //                 method: 'GET',
    //                 headers: {
    //                     'Content-Type': 'application/json',
    //                     Authorization: `Bearer ${token}`,
    //                 },
    //             })
    //                 .then((response) => {
    //                     console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω:", response); // –õ–æ–≥–∏—Ä—É–µ–º —Å–∞–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    //                     return response.json();
    //                 })
    //                 .then((data) => {
    //                     console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data); // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

    //                     // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ data –Ω–µ –ø—É—Å—Ç–∞—è –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º unseen_message_count
    //                     if (data && data.length > 0) {
    //                         const unreadMessagesCount = data[0].unseen_message_count;
    //                         console.log("–ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", unreadMessagesCount); // –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    //                         setUnreadMessagesCount(unreadMessagesCount);
    //                     } else {
    //                         console.log("–ù–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.");
    //                     }
    //                 })
    //                 .catch((error) => {
    //                     console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    //                 });
    //         };

    //         // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
    //         fetchUnreadMessages();
    //     } else {
    //         console.log("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: userId –∏–ª–∏ token –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.");
    //     }
    // }, [userId, token]); // –≠—Ñ—Ñ–µ–∫—Ç —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –æ—Ç userId –∏ token

    return (
        <div className="container-side-bar">
            <div className="menu-side-bar">
                <div className="container-item-menu">
                    <div
                        className={`menu-item ${isActive('account') ? 'active' : ''}`}
                        onClick={() => handleNavigate('account')}
                    >
                        üë§ <br />Account
                    </div>
                    <div
                        className={`menu-item ${isActive('dashboard') ? 'active' : ''}`}
                        onClick={() => handleNavigate('dashboard')}
                    >
                        üìä <br />Dashboard
                    </div>
                    <div
                        className={`menu-item ${isActive('leads') ? 'active' : ''}`}
                        onClick={() => handleNavigate('leads')}
                    >
                        üìù <br />Leads
                    </div>
                    <div
                        className={`menu-item ${isActive('chat') ? 'active' : ''}`}
                        onClick={() => handleNavigate('chat')}
                    >
                        üí¨ <br />Chat
                        {unreadCount > 0 && (
                            <span className="unread-indicator">{unreadCount}</span>
                        )}
                    </div>
                    <div
                        className={`menu-item ${isActive('mail') ? 'active' : ''}`}
                        onClick={() => handleNavigate('mail')}
                    >
                        ‚úâÔ∏è <br />Mail
                    </div>
                    <div
                        className={`menu-item ${isActive('notifications') ? 'active' : ''}`}
                        onClick={() => handleNavigate('notifications')}
                    >
                        üîî <br />Notifications
                    </div>
                </div>
            </div>
            <div className="container-log-out">
                <div className="menu-item" onClick={handleLogOut}>
                    üö™ <br />Log Out
                </div>
            </div>
        </div>
    );
};

export default CustomSidebar;