import React from "react";
import dayjs from "dayjs";
import TaskCard from "./TaskCard";
import { translations } from "../../utils/translations";
import "./TaskKanban.css";

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã (—Ñ–æ—Ä–º–∞—Ç: YYYY-MM-DD HH:mm:ss)
const parseTaskDate = (dateString) => {
  if (!dateString) return null;
  
  const parsed = dayjs(dateString, "YYYY-MM-DD HH:mm:ss");
  return parsed.isValid() ? parsed : null;
};

const language = localStorage.getItem("language") || "RO";

const TaskColumn = ({ titleKey, tasksList, now, onEdit, columnType }) => {
    const getColumnConfig = (key) => {
        const configs = {
            overdue: { icon: "‚ö†Ô∏è", title: "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ" },
            today: { icon: "üìÖ", title: "–°–µ–≥–æ–¥–Ω—è" },
            tomorrow: { icon: "‚è∞", title: "–ó–∞–≤—Ç—Ä–∞" }
        };
        return configs[key] || { icon: "üìã", title: "–ó–∞–¥–∞—á–∏" };
    };

    const config = getColumnConfig(columnType);

    return (
        <div className={`task-column ${columnType}`}>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏ */}
            <div className="task-column-header">
                <h3 className="task-column-title">
                    {config.icon} {translations[titleKey][language]}
                    <span className="task-count">
                        {tasksList.length}
                    </span>
                </h3>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á */}
            <div className="task-list-scroll-area">
                {tasksList.length === 0 ? (
                    <div className="task-empty">
                        {translations["noTasks"][language]}
                    </div>
                ) : (
                    tasksList.map((task) => {
                        const deadline = parseTaskDate(task.scheduled_time);
                        if (!deadline || !deadline.isValid()) {
                            console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞—Ç—É –≤ TaskColumn:", task.id, task.scheduled_time);
                            return null;
                        }
                        return (
                            <TaskCard
                                key={task.id}
                                task={task}
                                deadline={deadline}
                                now={now}
                                onClick={onEdit}
                            />
                        );
                    })
                )}
            </div>
        </div>
    );
};

export default TaskColumn;